

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 15 16:14:13 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F628A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  008C                     	;# 
    82  008E                     	;# 
    83  0092                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009F                     	;# 
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  008C                     	;# 
   119  008E                     	;# 
   120  0092                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009F                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0015                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  008C                     	;# 
   156  008E                     	;# 
   157  0092                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009A                     	;# 
   161  009B                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009F                     	;# 
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000E                     	;# 
   176  000E                     	;# 
   177  000F                     	;# 
   178  0010                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001F                     	;# 
   189  0081                     	;# 
   190  0085                     	;# 
   191  0086                     	;# 
   192  008C                     	;# 
   193  008E                     	;# 
   194  0092                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009F                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  000A                     	;# 
   210  000B                     	;# 
   211  000C                     	;# 
   212  000E                     	;# 
   213  000E                     	;# 
   214  000F                     	;# 
   215  0010                     	;# 
   216  0011                     	;# 
   217  0012                     	;# 
   218  0015                     	;# 
   219  0015                     	;# 
   220  0016                     	;# 
   221  0017                     	;# 
   222  0018                     	;# 
   223  0019                     	;# 
   224  001A                     	;# 
   225  001F                     	;# 
   226  0081                     	;# 
   227  0085                     	;# 
   228  0086                     	;# 
   229  008C                     	;# 
   230  008E                     	;# 
   231  0092                     	;# 
   232  0098                     	;# 
   233  0099                     	;# 
   234  009A                     	;# 
   235  009B                     	;# 
   236  009C                     	;# 
   237  009D                     	;# 
   238  009F                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  008C                     	;# 
   267  008E                     	;# 
   268  0092                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009F                     	;# 
   276                           
   277                           	psect	idataBANK0
   278  03ED                     __pidataBANK0:	
   279                           
   280                           ;initializer for _sample
   281  03ED  34EE               	retlw	238
   282  03EE  3455               	retlw	85
   283  03EF  34AB               	retlw	171
   284  03F0  3455               	retlw	85
   285  03F1  3455               	retlw	85
   286                           
   287                           ;initializer for _delay
   288  03F2  34A8               	retlw	168
   289  03F3  34A8               	retlw	168
   290  03F4  34A8               	retlw	168
   291  03F5  34A8               	retlw	168
   292  03F6  34A8               	retlw	168
   293                           
   294                           ;initializer for _new_state
   295  03F7  3401               	retlw	1
   296  03F8  3401               	retlw	1
   297  03F9  3401               	retlw	1
   298  03FA  3401               	retlw	1
   299  03FB  3401               	retlw	1
   300                           
   301                           ;initializer for _randx
   302  03FC  3401               	retlw	1
   303  03FD  3400               	retlw	0
   304  03FE  3400               	retlw	0
   305  03FF  3400               	retlw	0
   306  000B                     _INTCON	set	11
   307  001F                     _CMCON	set	31
   308  0005                     _PORTA	set	5
   309  0006                     _PORTB	set	6
   310  005F                     _GIE	set	95
   311  002F                     _RA7	set	47
   312  002C                     _RA4	set	44
   313  002B                     _RA3	set	43
   314  002A                     _RA2	set	42
   315  0029                     _RA1	set	41
   316  0028                     _RA0	set	40
   317  0058                     _RBIF	set	88
   318  008C                     _PIE1	set	140
   319  0086                     _TRISB	set	134
   320  0085                     _TRISA	set	133
   321                           
   322                           ; #config settings
   323  0000                     
   324                           	psect	cinit
   325  000F                     start_initialization:	
   326  000F                     __initialization:	
   327                           
   328                           ; Initialize objects allocated to BANK0
   329  000F  23ED               	fcall	__pidataBANK0	;fetch initializer
   330  0010  00B5               	movwf	__pdataBANK0& (0+127)
   331  0011  23EE               	fcall	__pidataBANK0+1	;fetch initializer
   332  0012  00B6               	movwf	(__pdataBANK0+1)& (0+127)
   333  0013  23EF               	fcall	__pidataBANK0+2	;fetch initializer
   334  0014  00B7               	movwf	(__pdataBANK0+2)& (0+127)
   335  0015  23F0               	fcall	__pidataBANK0+3	;fetch initializer
   336  0016  00B8               	movwf	(__pdataBANK0+3)& (0+127)
   337  0017  23F1               	fcall	__pidataBANK0+4	;fetch initializer
   338  0018  00B9               	movwf	(__pdataBANK0+4)& (0+127)
   339  0019  23F2               	fcall	__pidataBANK0+5	;fetch initializer
   340  001A  00BA               	movwf	(__pdataBANK0+5)& (0+127)
   341  001B  23F3               	fcall	__pidataBANK0+6	;fetch initializer
   342  001C  00BB               	movwf	(__pdataBANK0+6)& (0+127)
   343  001D  23F4               	fcall	__pidataBANK0+7	;fetch initializer
   344  001E  00BC               	movwf	(__pdataBANK0+7)& (0+127)
   345  001F  23F5               	fcall	__pidataBANK0+8	;fetch initializer
   346  0020  00BD               	movwf	(__pdataBANK0+8)& (0+127)
   347  0021  23F6               	fcall	__pidataBANK0+9	;fetch initializer
   348  0022  00BE               	movwf	(__pdataBANK0+9)& (0+127)
   349  0023  23F7               	fcall	__pidataBANK0+10	;fetch initializer
   350  0024  00BF               	movwf	(__pdataBANK0+10)& (0+127)
   351  0025  23F8               	fcall	__pidataBANK0+11	;fetch initializer
   352  0026  00C0               	movwf	(__pdataBANK0+11)& (0+127)
   353  0027  23F9               	fcall	__pidataBANK0+12	;fetch initializer
   354  0028  00C1               	movwf	(__pdataBANK0+12)& (0+127)
   355  0029  23FA               	fcall	__pidataBANK0+13	;fetch initializer
   356  002A  00C2               	movwf	(__pdataBANK0+13)& (0+127)
   357  002B  23FB               	fcall	__pidataBANK0+14	;fetch initializer
   358  002C  00C3               	movwf	(__pdataBANK0+14)& (0+127)
   359  002D  23FC               	fcall	__pidataBANK0+15	;fetch initializer
   360  002E  00C4               	movwf	(__pdataBANK0+15)& (0+127)
   361  002F  23FD               	fcall	__pidataBANK0+16	;fetch initializer
   362  0030  00C5               	movwf	(__pdataBANK0+16)& (0+127)
   363  0031  23FE               	fcall	__pidataBANK0+17	;fetch initializer
   364  0032  00C6               	movwf	(__pdataBANK0+17)& (0+127)
   365  0033  23FF               	fcall	__pidataBANK0+18	;fetch initializer
   366  0034  00C7               	movwf	(__pdataBANK0+18)& (0+127)
   367                           
   368                           ; Clear objects allocated to BANK0
   369  0035  01C8               	clrf	__pbssBANK0& (0+127)
   370  0036  01C9               	clrf	(__pbssBANK0+1)& (0+127)
   371  0037  01CA               	clrf	(__pbssBANK0+2)& (0+127)
   372  0038  01CB               	clrf	(__pbssBANK0+3)& (0+127)
   373  0039  01CC               	clrf	(__pbssBANK0+4)& (0+127)
   374  003A  01CD               	clrf	(__pbssBANK0+5)& (0+127)
   375  003B  01CE               	clrf	(__pbssBANK0+6)& (0+127)
   376  003C  01CF               	clrf	(__pbssBANK0+7)& (0+127)
   377  003D  01D0               	clrf	(__pbssBANK0+8)& (0+127)
   378  003E  01D1               	clrf	(__pbssBANK0+9)& (0+127)
   379  003F  01D2               	clrf	(__pbssBANK0+10)& (0+127)
   380  0040                     end_of_initialization:	
   381                           ;End of C runtime variable initialization code
   382                           
   383  0040                     __end_of__initialization:	
   384  0040  0183               	clrf	3
   385  0041  2842               	ljmp	_main	;jump to C main() function
   386                           
   387                           	psect	bssBANK0
   388  0048                     __pbssBANK0:	
   389  0048                     _old_state:	
   390  0048                     	ds	5
   391  004D                     _timer_for_demo:	
   392  004D                     	ds	2
   393  004F                     _counter:	
   394  004F                     	ds	2
   395  0051                     _bit_counter:	
   396  0051                     	ds	1
   397  0052                     _ii:	
   398  0052                     	ds	1
   399                           
   400                           	psect	dataBANK0
   401  0035                     __pdataBANK0:	
   402  0035                     _sample:	
   403  0035                     	ds	5
   404  003A                     _delay:	
   405  003A                     	ds	5
   406  003F                     _new_state:	
   407  003F                     	ds	5
   408  0044                     _randx:	
   409  0044                     	ds	4
   410                           
   411                           	psect	cstackCOMMON
   412  0070                     __pcstackCOMMON:	
   413  0070                     ?_ConfigureOscillator:	
   414  0070                     ?_InitApp:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_my_isr_routine:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_main:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?___lmul:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ___lmul@multiplier:	
   427                           ; 4 bytes @ 0x0
   428                           
   429                           
   430                           ; 4 bytes @ 0x0
   431  0070                     	ds	4
   432  0074                     ___lmul@multiplicand:	
   433                           
   434                           ; 4 bytes @ 0x4
   435  0074                     	ds	4
   436  0078                     ??___lmul:	
   437                           
   438                           ; 1 bytes @ 0x8
   439  0078                     	ds	1
   440  0079                     ___lmul@product:	
   441                           
   442                           ; 4 bytes @ 0x9
   443  0079                     	ds	4
   444                           
   445                           	psect	cstackBANK0
   446  0020                     __pcstackBANK0:	
   447  0020                     ?_rand:	
   448                           
   449                           ; 2 bytes @ 0x0
   450  0020                     	ds	2
   451  0022                     ??_rand:	
   452                           
   453                           ; 1 bytes @ 0x2
   454  0022                     	ds	5
   455  0027                     ??_my_isr_routine:	
   456                           
   457                           ; 1 bytes @ 0x7
   458  0027                     	ds	5
   459  002C                     my_isr_routine@j_47:	
   460                           
   461                           ; 1 bytes @ 0xC
   462  002C                     	ds	1
   463  002D                     my_isr_routine@i:	
   464                           
   465                           ; 1 bytes @ 0xD
   466  002D                     	ds	1
   467  002E                     my_isr_routine@j:	
   468                           
   469                           ; 1 bytes @ 0xE
   470  002E                     	ds	1
   471  002F                     ??_ConfigureOscillator:	
   472  002F                     ??_InitApp:	
   473                           ; 1 bytes @ 0xF
   474                           
   475  002F                     ?_srand:	
   476                           ; 1 bytes @ 0xF
   477                           
   478  002F                     srand@x:	
   479                           ; 1 bytes @ 0xF
   480                           
   481                           
   482                           ; 2 bytes @ 0xF
   483  002F                     	ds	2
   484  0031                     ??_srand:	
   485  0031                     ??_main:	
   486                           ; 1 bytes @ 0x11
   487                           
   488                           
   489                           ; 1 bytes @ 0x11
   490  0031                     	ds	3
   491  0034                     main@k:	
   492                           
   493                           ; 1 bytes @ 0x14
   494  0034                     	ds	1
   495                           
   496                           	psect	maintext
   497  0042                     __pmaintext:	
   498 ;;
   499 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   500 ;;
   501 ;; *************** function _main *****************
   502 ;; Defined at:
   503 ;;		line 31 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;  k               1   20[BANK0 ] unsigned char 
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, status,2, status,0, pclath, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : B00/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   517 ;;      Params:         0       0       0       0
   518 ;;      Locals:         0       1       0       0
   519 ;;      Temps:          0       3       0       0
   520 ;;      Totals:         0       4       0       0
   521 ;;Total ram usage:        4 bytes
   522 ;; Hardware stack levels required when called:    4
   523 ;; This function calls:
   524 ;;		_ConfigureOscillator
   525 ;;		_InitApp
   526 ;;		_srand
   527 ;; This function is called by:
   528 ;;		Startup code after reset
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           
   533                           ;psect for function _main
   534  0042                     _main:	
   535  0042                     l1087:	
   536                           ;incstack = 0
   537                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   538                           
   539                           
   540                           ;main.c: 34:     ConfigureOscillator();
   541  0042  2409               	fcall	_ConfigureOscillator
   542  0043                     l1089:	
   543                           
   544                           ;main.c: 37:     InitApp();
   545  0043  23D8               	fcall	_InitApp
   546  0044                     l1091:	
   547                           
   548                           ;main.c: 39:     srand(200);
   549  0044  30C8               	movlw	200
   550  0045  1283               	bcf	3,5	;RP0=0, select bank0
   551  0046  1303               	bcf	3,6	;RP1=0, select bank0
   552  0047  00AF               	movwf	srand@x
   553  0048  3000               	movlw	0
   554  0049  00B0               	movwf	srand@x+1
   555  004A  2400               	fcall	_srand
   556  004B                     l1093:	
   557                           
   558                           ;main.c: 42:     {;main.c: 43:         if (RA7==1) {
   559  004B  1283               	bcf	3,5	;RP0=0, select bank0
   560  004C  1303               	bcf	3,6	;RP1=0, select bank0
   561  004D  1F85               	btfss	5,7	;volatile
   562  004E  2850               	goto	u561
   563  004F  2851               	goto	u560
   564  0050                     u561:	
   565  0050  2854               	goto	l1099
   566  0051                     u560:	
   567  0051                     l1095:	
   568                           
   569                           ;main.c: 44:             GIE = 0;
   570  0051  138B               	bcf	11,7	;volatile
   571  0052                     l1097:	
   572                           
   573                           ;main.c: 45:             PORTA = 0b00000000;
   574  0052  0185               	clrf	5	;volatile
   575                           
   576                           ;main.c: 46:         } else {
   577  0053  284B               	goto	l1093
   578  0054                     l1099:	
   579                           
   580                           ;main.c: 47:             PORTA = 0b11111111;
   581  0054  30FF               	movlw	255
   582  0055  0085               	movwf	5	;volatile
   583  0056                     l1101:	
   584                           
   585                           ;main.c: 48:             if (timer_for_demo==0) {
   586  0056  084D               	movf	_timer_for_demo,w
   587  0057  044E               	iorwf	_timer_for_demo+1,w
   588  0058  1D03               	btfss	3,2
   589  0059  285B               	goto	u571
   590  005A  285C               	goto	u570
   591  005B                     u571:	
   592  005B  2A3E               	goto	l1217
   593  005C                     u570:	
   594  005C                     l1103:	
   595                           
   596                           ;main.c: 49:                 GIE = 0;
   597  005C  138B               	bcf	11,7	;volatile
   598  005D                     l1105:	
   599                           
   600                           ;main.c: 50:                 for (char k=0; k<4; k++) {
   601  005D  01B4               	clrf	main@k
   602  005E                     l1111:	
   603                           
   604                           ;main.c: 51:                     PORTA = 0b00011110;
   605  005E  301E               	movlw	30
   606  005F  0085               	movwf	5	;volatile
   607                           
   608                           ;main.c: 52:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   609  0060  3002               	movlw	2
   610  0061  1283               	bcf	3,5	;RP0=0, select bank0
   611  0062  1303               	bcf	3,6	;RP1=0, select bank0
   612  0063  00B3               	movwf	??_main+2
   613  0064  3004               	movlw	4
   614  0065  00B2               	movwf	??_main+1
   615  0066  30BA               	movlw	186
   616  0067  00B1               	movwf	??_main
   617  0068                     u597:	
   618  0068  0BB1               	decfsz	??_main,f
   619  0069  2868               	goto	u597
   620  006A  0BB2               	decfsz	??_main+1,f
   621  006B  2868               	goto	u597
   622  006C  0BB3               	decfsz	??_main+2,f
   623  006D  2868               	goto	u597
   624  006E                     l1113:	
   625                           
   626                           ;main.c: 53:                     PORTA = 0b00000000;
   627  006E  1283               	bcf	3,5	;RP0=0, select bank0
   628  006F  1303               	bcf	3,6	;RP1=0, select bank0
   629  0070  0185               	clrf	5	;volatile
   630  0071                     l1115:	
   631                           
   632                           ;main.c: 54:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   633  0071  3002               	movlw	2
   634  0072  1283               	bcf	3,5	;RP0=0, select bank0
   635  0073  1303               	bcf	3,6	;RP1=0, select bank0
   636  0074  00B3               	movwf	??_main+2
   637  0075  3004               	movlw	4
   638  0076  00B2               	movwf	??_main+1
   639  0077  30BA               	movlw	186
   640  0078  00B1               	movwf	??_main
   641  0079                     u607:	
   642  0079  0BB1               	decfsz	??_main,f
   643  007A  2879               	goto	u607
   644  007B  0BB2               	decfsz	??_main+1,f
   645  007C  2879               	goto	u607
   646  007D  0BB3               	decfsz	??_main+2,f
   647  007E  2879               	goto	u607
   648  007F                     l1117:	
   649                           
   650                           ;main.c: 55:                     PORTA = 0b00010101;
   651  007F  3015               	movlw	21
   652  0080  1283               	bcf	3,5	;RP0=0, select bank0
   653  0081  1303               	bcf	3,6	;RP1=0, select bank0
   654  0082  0085               	movwf	5	;volatile
   655  0083                     l1119:	
   656                           
   657                           ;main.c: 56:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   658  0083  3002               	movlw	2
   659  0084  1283               	bcf	3,5	;RP0=0, select bank0
   660  0085  1303               	bcf	3,6	;RP1=0, select bank0
   661  0086  00B3               	movwf	??_main+2
   662  0087  3004               	movlw	4
   663  0088  00B2               	movwf	??_main+1
   664  0089  30BA               	movlw	186
   665  008A  00B1               	movwf	??_main
   666  008B                     u617:	
   667  008B  0BB1               	decfsz	??_main,f
   668  008C  288B               	goto	u617
   669  008D  0BB2               	decfsz	??_main+1,f
   670  008E  288B               	goto	u617
   671  008F  0BB3               	decfsz	??_main+2,f
   672  0090  288B               	goto	u617
   673  0091                     l1121:	
   674                           
   675                           ;main.c: 57:                     PORTA = 0b00001010;
   676  0091  300A               	movlw	10
   677  0092  1283               	bcf	3,5	;RP0=0, select bank0
   678  0093  1303               	bcf	3,6	;RP1=0, select bank0
   679  0094  0085               	movwf	5	;volatile
   680  0095                     l1123:	
   681                           
   682                           ;main.c: 58:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   683  0095  3002               	movlw	2
   684  0096  1283               	bcf	3,5	;RP0=0, select bank0
   685  0097  1303               	bcf	3,6	;RP1=0, select bank0
   686  0098  00B3               	movwf	??_main+2
   687  0099  3004               	movlw	4
   688  009A  00B2               	movwf	??_main+1
   689  009B  30BA               	movlw	186
   690  009C  00B1               	movwf	??_main
   691  009D                     u627:	
   692  009D  0BB1               	decfsz	??_main,f
   693  009E  289D               	goto	u627
   694  009F  0BB2               	decfsz	??_main+1,f
   695  00A0  289D               	goto	u627
   696  00A1  0BB3               	decfsz	??_main+2,f
   697  00A2  289D               	goto	u627
   698  00A3                     l1125:	
   699                           
   700                           ;main.c: 59:                     PORTA = 0b00011111;
   701  00A3  301F               	movlw	31
   702  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   703  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   704  00A6  0085               	movwf	5	;volatile
   705  00A7                     l1127:	
   706                           
   707                           ;main.c: 60:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   708  00A7  3002               	movlw	2
   709  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   710  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   711  00AA  00B3               	movwf	??_main+2
   712  00AB  3004               	movlw	4
   713  00AC  00B2               	movwf	??_main+1
   714  00AD  30BA               	movlw	186
   715  00AE  00B1               	movwf	??_main
   716  00AF                     u637:	
   717  00AF  0BB1               	decfsz	??_main,f
   718  00B0  28AF               	goto	u637
   719  00B1  0BB2               	decfsz	??_main+1,f
   720  00B2  28AF               	goto	u637
   721  00B3  0BB3               	decfsz	??_main+2,f
   722  00B4  28AF               	goto	u637
   723  00B5                     l1129:	
   724                           
   725                           ;main.c: 61:                     PORTA = 0b00001111;
   726  00B5  300F               	movlw	15
   727  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   728  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   729  00B8  0085               	movwf	5	;volatile
   730  00B9                     l1131:	
   731                           
   732                           ;main.c: 62:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   733  00B9  3002               	movlw	2
   734  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   735  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   736  00BC  00B3               	movwf	??_main+2
   737  00BD  3004               	movlw	4
   738  00BE  00B2               	movwf	??_main+1
   739  00BF  30BA               	movlw	186
   740  00C0  00B1               	movwf	??_main
   741  00C1                     u647:	
   742  00C1  0BB1               	decfsz	??_main,f
   743  00C2  28C1               	goto	u647
   744  00C3  0BB2               	decfsz	??_main+1,f
   745  00C4  28C1               	goto	u647
   746  00C5  0BB3               	decfsz	??_main+2,f
   747  00C6  28C1               	goto	u647
   748  00C7                     l1133:	
   749                           
   750                           ;main.c: 63:                     PORTA = 0b00010111;
   751  00C7  3017               	movlw	23
   752  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   753  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   754  00CA  0085               	movwf	5	;volatile
   755  00CB                     l1135:	
   756                           
   757                           ;main.c: 64:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   758  00CB  3002               	movlw	2
   759  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   760  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   761  00CE  00B3               	movwf	??_main+2
   762  00CF  3004               	movlw	4
   763  00D0  00B2               	movwf	??_main+1
   764  00D1  30BA               	movlw	186
   765  00D2  00B1               	movwf	??_main
   766  00D3                     u657:	
   767  00D3  0BB1               	decfsz	??_main,f
   768  00D4  28D3               	goto	u657
   769  00D5  0BB2               	decfsz	??_main+1,f
   770  00D6  28D3               	goto	u657
   771  00D7  0BB3               	decfsz	??_main+2,f
   772  00D8  28D3               	goto	u657
   773  00D9                     l1137:	
   774                           
   775                           ;main.c: 65:                     PORTA = 0b00011011;
   776  00D9  301B               	movlw	27
   777  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   778  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   779  00DC  0085               	movwf	5	;volatile
   780  00DD                     l1139:	
   781                           
   782                           ;main.c: 66:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   783  00DD  3002               	movlw	2
   784  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   785  00DF  1303               	bcf	3,6	;RP1=0, select bank0
   786  00E0  00B3               	movwf	??_main+2
   787  00E1  3004               	movlw	4
   788  00E2  00B2               	movwf	??_main+1
   789  00E3  30BA               	movlw	186
   790  00E4  00B1               	movwf	??_main
   791  00E5                     u667:	
   792  00E5  0BB1               	decfsz	??_main,f
   793  00E6  28E5               	goto	u667
   794  00E7  0BB2               	decfsz	??_main+1,f
   795  00E8  28E5               	goto	u667
   796  00E9  0BB3               	decfsz	??_main+2,f
   797  00EA  28E5               	goto	u667
   798  00EB                     l1141:	
   799                           
   800                           ;main.c: 67:                     PORTA = 0b00011101;
   801  00EB  301D               	movlw	29
   802  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   803  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   804  00EE  0085               	movwf	5	;volatile
   805  00EF                     l1143:	
   806                           
   807                           ;main.c: 68:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   808  00EF  3002               	movlw	2
   809  00F0  1283               	bcf	3,5	;RP0=0, select bank0
   810  00F1  1303               	bcf	3,6	;RP1=0, select bank0
   811  00F2  00B3               	movwf	??_main+2
   812  00F3  3004               	movlw	4
   813  00F4  00B2               	movwf	??_main+1
   814  00F5  30BA               	movlw	186
   815  00F6  00B1               	movwf	??_main
   816  00F7                     u677:	
   817  00F7  0BB1               	decfsz	??_main,f
   818  00F8  28F7               	goto	u677
   819  00F9  0BB2               	decfsz	??_main+1,f
   820  00FA  28F7               	goto	u677
   821  00FB  0BB3               	decfsz	??_main+2,f
   822  00FC  28F7               	goto	u677
   823  00FD                     l1145:	
   824                           
   825                           ;main.c: 69:                     PORTA = 0b00011110;
   826  00FD  301E               	movlw	30
   827  00FE  1283               	bcf	3,5	;RP0=0, select bank0
   828  00FF  1303               	bcf	3,6	;RP1=0, select bank0
   829  0100  0085               	movwf	5	;volatile
   830  0101                     l1147:	
   831                           
   832                           ;main.c: 70:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   833  0101  3002               	movlw	2
   834  0102  1283               	bcf	3,5	;RP0=0, select bank0
   835  0103  1303               	bcf	3,6	;RP1=0, select bank0
   836  0104  00B3               	movwf	??_main+2
   837  0105  3004               	movlw	4
   838  0106  00B2               	movwf	??_main+1
   839  0107  30BA               	movlw	186
   840  0108  00B1               	movwf	??_main
   841  0109                     u687:	
   842  0109  0BB1               	decfsz	??_main,f
   843  010A  2909               	goto	u687
   844  010B  0BB2               	decfsz	??_main+1,f
   845  010C  2909               	goto	u687
   846  010D  0BB3               	decfsz	??_main+2,f
   847  010E  2909               	goto	u687
   848  010F                     l1149:	
   849                           
   850                           ;main.c: 71:                     PORTA = 0b00010000;
   851  010F  3010               	movlw	16
   852  0110  1283               	bcf	3,5	;RP0=0, select bank0
   853  0111  1303               	bcf	3,6	;RP1=0, select bank0
   854  0112  0085               	movwf	5	;volatile
   855  0113                     l1151:	
   856                           
   857                           ;main.c: 72:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   858  0113  3002               	movlw	2
   859  0114  1283               	bcf	3,5	;RP0=0, select bank0
   860  0115  1303               	bcf	3,6	;RP1=0, select bank0
   861  0116  00B3               	movwf	??_main+2
   862  0117  3004               	movlw	4
   863  0118  00B2               	movwf	??_main+1
   864  0119  30BA               	movlw	186
   865  011A  00B1               	movwf	??_main
   866  011B                     u697:	
   867  011B  0BB1               	decfsz	??_main,f
   868  011C  291B               	goto	u697
   869  011D  0BB2               	decfsz	??_main+1,f
   870  011E  291B               	goto	u697
   871  011F  0BB3               	decfsz	??_main+2,f
   872  0120  291B               	goto	u697
   873  0121                     l1153:	
   874                           
   875                           ;main.c: 73:                     PORTA = 0b00001000;
   876  0121  3008               	movlw	8
   877  0122  1283               	bcf	3,5	;RP0=0, select bank0
   878  0123  1303               	bcf	3,6	;RP1=0, select bank0
   879  0124  0085               	movwf	5	;volatile
   880  0125                     l1155:	
   881                           
   882                           ;main.c: 74:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   883  0125  3002               	movlw	2
   884  0126  1283               	bcf	3,5	;RP0=0, select bank0
   885  0127  1303               	bcf	3,6	;RP1=0, select bank0
   886  0128  00B3               	movwf	??_main+2
   887  0129  3004               	movlw	4
   888  012A  00B2               	movwf	??_main+1
   889  012B  30BA               	movlw	186
   890  012C  00B1               	movwf	??_main
   891  012D                     u707:	
   892  012D  0BB1               	decfsz	??_main,f
   893  012E  292D               	goto	u707
   894  012F  0BB2               	decfsz	??_main+1,f
   895  0130  292D               	goto	u707
   896  0131  0BB3               	decfsz	??_main+2,f
   897  0132  292D               	goto	u707
   898  0133                     l1157:	
   899                           
   900                           ;main.c: 75:                     PORTA = 0b00000100;
   901  0133  3004               	movlw	4
   902  0134  1283               	bcf	3,5	;RP0=0, select bank0
   903  0135  1303               	bcf	3,6	;RP1=0, select bank0
   904  0136  0085               	movwf	5	;volatile
   905  0137                     l1159:	
   906                           
   907                           ;main.c: 76:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   908  0137  3002               	movlw	2
   909  0138  1283               	bcf	3,5	;RP0=0, select bank0
   910  0139  1303               	bcf	3,6	;RP1=0, select bank0
   911  013A  00B3               	movwf	??_main+2
   912  013B  3004               	movlw	4
   913  013C  00B2               	movwf	??_main+1
   914  013D  30BA               	movlw	186
   915  013E  00B1               	movwf	??_main
   916  013F                     u717:	
   917  013F  0BB1               	decfsz	??_main,f
   918  0140  293F               	goto	u717
   919  0141  0BB2               	decfsz	??_main+1,f
   920  0142  293F               	goto	u717
   921  0143  0BB3               	decfsz	??_main+2,f
   922  0144  293F               	goto	u717
   923  0145                     l1161:	
   924                           
   925                           ;main.c: 77:                     PORTA = 0b00000010;
   926  0145  3002               	movlw	2
   927  0146  1283               	bcf	3,5	;RP0=0, select bank0
   928  0147  1303               	bcf	3,6	;RP1=0, select bank0
   929  0148  0085               	movwf	5	;volatile
   930  0149                     l1163:	
   931                           
   932                           ;main.c: 78:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   933  0149  3002               	movlw	2
   934  014A  1283               	bcf	3,5	;RP0=0, select bank0
   935  014B  1303               	bcf	3,6	;RP1=0, select bank0
   936  014C  00B3               	movwf	??_main+2
   937  014D  3004               	movlw	4
   938  014E  00B2               	movwf	??_main+1
   939  014F  30BA               	movlw	186
   940  0150  00B1               	movwf	??_main
   941  0151                     u727:	
   942  0151  0BB1               	decfsz	??_main,f
   943  0152  2951               	goto	u727
   944  0153  0BB2               	decfsz	??_main+1,f
   945  0154  2951               	goto	u727
   946  0155  0BB3               	decfsz	??_main+2,f
   947  0156  2951               	goto	u727
   948  0157                     l1165:	
   949                           
   950                           ;main.c: 79:                     PORTA = 0b00000001;
   951  0157  3001               	movlw	1
   952  0158  1283               	bcf	3,5	;RP0=0, select bank0
   953  0159  1303               	bcf	3,6	;RP1=0, select bank0
   954  015A  0085               	movwf	5	;volatile
   955  015B                     l1167:	
   956                           
   957                           ;main.c: 80:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   958  015B  3002               	movlw	2
   959  015C  1283               	bcf	3,5	;RP0=0, select bank0
   960  015D  1303               	bcf	3,6	;RP1=0, select bank0
   961  015E  00B3               	movwf	??_main+2
   962  015F  3004               	movlw	4
   963  0160  00B2               	movwf	??_main+1
   964  0161  30BA               	movlw	186
   965  0162  00B1               	movwf	??_main
   966  0163                     u737:	
   967  0163  0BB1               	decfsz	??_main,f
   968  0164  2963               	goto	u737
   969  0165  0BB2               	decfsz	??_main+1,f
   970  0166  2963               	goto	u737
   971  0167  0BB3               	decfsz	??_main+2,f
   972  0168  2963               	goto	u737
   973                           
   974                           ;main.c: 81:                     PORTA = 0b00000000;
   975  0169  1283               	bcf	3,5	;RP0=0, select bank0
   976  016A  1303               	bcf	3,6	;RP1=0, select bank0
   977  016B  0185               	clrf	5	;volatile
   978  016C                     l1169:	
   979                           
   980                           ;main.c: 82:                     _delay((unsigned long)((200)*(4000000/4000.0)));
   981  016C  3002               	movlw	2
   982  016D  1283               	bcf	3,5	;RP0=0, select bank0
   983  016E  1303               	bcf	3,6	;RP1=0, select bank0
   984  016F  00B3               	movwf	??_main+2
   985  0170  3004               	movlw	4
   986  0171  00B2               	movwf	??_main+1
   987  0172  30BA               	movlw	186
   988  0173  00B1               	movwf	??_main
   989  0174                     u747:	
   990  0174  0BB1               	decfsz	??_main,f
   991  0175  2974               	goto	u747
   992  0176  0BB2               	decfsz	??_main+1,f
   993  0177  2974               	goto	u747
   994  0178  0BB3               	decfsz	??_main+2,f
   995  0179  2974               	goto	u747
   996  017A                     l1171:	
   997                           
   998                           ;main.c: 83:                     PORTA = 0b00000001;
   999  017A  3001               	movlw	1
  1000  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1001  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1002  017D  0085               	movwf	5	;volatile
  1003  017E                     l1173:	
  1004                           
  1005                           ;main.c: 84:                     _delay((unsigned long)((200)*(4000000/4000.0)));
  1006  017E  3002               	movlw	2
  1007  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0181  00B3               	movwf	??_main+2
  1010  0182  3004               	movlw	4
  1011  0183  00B2               	movwf	??_main+1
  1012  0184  30BA               	movlw	186
  1013  0185  00B1               	movwf	??_main
  1014  0186                     u757:	
  1015  0186  0BB1               	decfsz	??_main,f
  1016  0187  2986               	goto	u757
  1017  0188  0BB2               	decfsz	??_main+1,f
  1018  0189  2986               	goto	u757
  1019  018A  0BB3               	decfsz	??_main+2,f
  1020  018B  2986               	goto	u757
  1021  018C                     l1175:	
  1022                           
  1023                           ;main.c: 85:                     PORTA = 0b00000011;
  1024  018C  3003               	movlw	3
  1025  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1026  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1027  018F  0085               	movwf	5	;volatile
  1028  0190                     l1177:	
  1029                           
  1030                           ;main.c: 86:                     _delay((unsigned long)((200)*(4000000/4000.0)));
  1031  0190  3002               	movlw	2
  1032  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0193  00B3               	movwf	??_main+2
  1035  0194  3004               	movlw	4
  1036  0195  00B2               	movwf	??_main+1
  1037  0196  30BA               	movlw	186
  1038  0197  00B1               	movwf	??_main
  1039  0198                     u767:	
  1040  0198  0BB1               	decfsz	??_main,f
  1041  0199  2998               	goto	u767
  1042  019A  0BB2               	decfsz	??_main+1,f
  1043  019B  2998               	goto	u767
  1044  019C  0BB3               	decfsz	??_main+2,f
  1045  019D  2998               	goto	u767
  1046  019E                     l1179:	
  1047                           
  1048                           ;main.c: 87:                     PORTA = 0b00000110;
  1049  019E  3006               	movlw	6
  1050  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1051  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1052  01A1  0085               	movwf	5	;volatile
  1053  01A2                     l1181:	
  1054                           
  1055                           ;main.c: 88:                     _delay((unsigned long)((200)*(4000000/4000.0)));
  1056  01A2  3002               	movlw	2
  1057  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1058  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1059  01A5  00B3               	movwf	??_main+2
  1060  01A6  3004               	movlw	4
  1061  01A7  00B2               	movwf	??_main+1
  1062  01A8  30BA               	movlw	186
  1063  01A9  00B1               	movwf	??_main
  1064  01AA                     u777:	
  1065  01AA  0BB1               	decfsz	??_main,f
  1066  01AB  29AA               	goto	u777
  1067  01AC  0BB2               	decfsz	??_main+1,f
  1068  01AD  29AA               	goto	u777
  1069  01AE  0BB3               	decfsz	??_main+2,f
  1070  01AF  29AA               	goto	u777
  1071  01B0                     l1183:	
  1072                           
  1073                           ;main.c: 89:                     PORTA = 0b00001100;
  1074  01B0  300C               	movlw	12
  1075  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1076  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1077  01B3  0085               	movwf	5	;volatile
  1078  01B4                     l1185:	
  1079                           
  1080                           ;main.c: 90:                     _delay((unsigned long)((200)*(4000000/4000.0)));
  1081  01B4  3002               	movlw	2
  1082  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1083  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1084  01B7  00B3               	movwf	??_main+2
  1085  01B8  3004               	movlw	4
  1086  01B9  00B2               	movwf	??_main+1
  1087  01BA  30BA               	movlw	186
  1088  01BB  00B1               	movwf	??_main
  1089  01BC                     u787:	
  1090  01BC  0BB1               	decfsz	??_main,f
  1091  01BD  29BC               	goto	u787
  1092  01BE  0BB2               	decfsz	??_main+1,f
  1093  01BF  29BC               	goto	u787
  1094  01C0  0BB3               	decfsz	??_main+2,f
  1095  01C1  29BC               	goto	u787
  1096  01C2                     l1187:	
  1097                           
  1098                           ;main.c: 91:                     PORTA = 0b00011000;
  1099  01C2  3018               	movlw	24
  1100  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1101  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1102  01C5  0085               	movwf	5	;volatile
  1103  01C6                     l1189:	
  1104                           
  1105                           ;main.c: 92:                     _delay((unsigned long)((200)*(4000000/4000.0)));
  1106  01C6  3002               	movlw	2
  1107  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1108  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1109  01C9  00B3               	movwf	??_main+2
  1110  01CA  3004               	movlw	4
  1111  01CB  00B2               	movwf	??_main+1
  1112  01CC  30BA               	movlw	186
  1113  01CD  00B1               	movwf	??_main
  1114  01CE                     u797:	
  1115  01CE  0BB1               	decfsz	??_main,f
  1116  01CF  29CE               	goto	u797
  1117  01D0  0BB2               	decfsz	??_main+1,f
  1118  01D1  29CE               	goto	u797
  1119  01D2  0BB3               	decfsz	??_main+2,f
  1120  01D3  29CE               	goto	u797
  1121  01D4                     l1191:	
  1122                           
  1123                           ;main.c: 93:                     PORTA = 0b00000111;
  1124  01D4  3007               	movlw	7
  1125  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1126  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1127  01D7  0085               	movwf	5	;volatile
  1128  01D8                     l1193:	
  1129                           
  1130                           ;main.c: 94:                     _delay((unsigned long)((200)*(4000000/4000.0)));
  1131  01D8  3002               	movlw	2
  1132  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1133  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1134  01DB  00B3               	movwf	??_main+2
  1135  01DC  3004               	movlw	4
  1136  01DD  00B2               	movwf	??_main+1
  1137  01DE  30BA               	movlw	186
  1138  01DF  00B1               	movwf	??_main
  1139  01E0                     u807:	
  1140  01E0  0BB1               	decfsz	??_main,f
  1141  01E1  29E0               	goto	u807
  1142  01E2  0BB2               	decfsz	??_main+1,f
  1143  01E3  29E0               	goto	u807
  1144  01E4  0BB3               	decfsz	??_main+2,f
  1145  01E5  29E0               	goto	u807
  1146  01E6                     l1195:	
  1147                           
  1148                           ;main.c: 95:                     PORTA = 0b00010011;
  1149  01E6  3013               	movlw	19
  1150  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1151  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1152  01E9  0085               	movwf	5	;volatile
  1153  01EA                     l1197:	
  1154                           
  1155                           ;main.c: 96:                     _delay((unsigned long)((200)*(4000000/4000.0)));
  1156  01EA  3002               	movlw	2
  1157  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1158  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1159  01ED  00B3               	movwf	??_main+2
  1160  01EE  3004               	movlw	4
  1161  01EF  00B2               	movwf	??_main+1
  1162  01F0  30BA               	movlw	186
  1163  01F1  00B1               	movwf	??_main
  1164  01F2                     u817:	
  1165  01F2  0BB1               	decfsz	??_main,f
  1166  01F3  29F2               	goto	u817
  1167  01F4  0BB2               	decfsz	??_main+1,f
  1168  01F5  29F2               	goto	u817
  1169  01F6  0BB3               	decfsz	??_main+2,f
  1170  01F7  29F2               	goto	u817
  1171  01F8                     l1199:	
  1172                           
  1173                           ;main.c: 97:                     PORTA = 0b00011001;
  1174  01F8  3019               	movlw	25
  1175  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1176  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1177  01FB  0085               	movwf	5	;volatile
  1178  01FC                     l1201:	
  1179                           
  1180                           ;main.c: 98:                     _delay((unsigned long)((200)*(4000000/4000.0)));
  1181  01FC  3002               	movlw	2
  1182  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1183  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1184  01FF  00B3               	movwf	??_main+2
  1185  0200  3004               	movlw	4
  1186  0201  00B2               	movwf	??_main+1
  1187  0202  30BA               	movlw	186
  1188  0203  00B1               	movwf	??_main
  1189  0204                     u827:	
  1190  0204  0BB1               	decfsz	??_main,f
  1191  0205  2A04               	goto	u827
  1192  0206  0BB2               	decfsz	??_main+1,f
  1193  0207  2A04               	goto	u827
  1194  0208  0BB3               	decfsz	??_main+2,f
  1195  0209  2A04               	goto	u827
  1196  020A                     l1203:	
  1197                           
  1198                           ;main.c: 99:                     PORTA = 0b00011100;
  1199  020A  301C               	movlw	28
  1200  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1201  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1202  020D  0085               	movwf	5	;volatile
  1203  020E                     l1205:	
  1204                           
  1205                           ;main.c: 100:                     _delay((unsigned long)((200)*(4000000/4000.0)));
  1206  020E  3002               	movlw	2
  1207  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0211  00B3               	movwf	??_main+2
  1210  0212  3004               	movlw	4
  1211  0213  00B2               	movwf	??_main+1
  1212  0214  30BA               	movlw	186
  1213  0215  00B1               	movwf	??_main
  1214  0216                     u837:	
  1215  0216  0BB1               	decfsz	??_main,f
  1216  0217  2A16               	goto	u837
  1217  0218  0BB2               	decfsz	??_main+1,f
  1218  0219  2A16               	goto	u837
  1219  021A  0BB3               	decfsz	??_main+2,f
  1220  021B  2A16               	goto	u837
  1221  021C                     l1207:	
  1222                           
  1223                           ;main.c: 101:                     PORTA = 0b00011110;
  1224  021C  301E               	movlw	30
  1225  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1226  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1227  021F  0085               	movwf	5	;volatile
  1228  0220                     l1209:	
  1229                           
  1230                           ;main.c: 102:                     _delay((unsigned long)((200)*(4000000/4000.0)));
  1231  0220  3002               	movlw	2
  1232  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1233  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1234  0223  00B3               	movwf	??_main+2
  1235  0224  3004               	movlw	4
  1236  0225  00B2               	movwf	??_main+1
  1237  0226  30BA               	movlw	186
  1238  0227  00B1               	movwf	??_main
  1239  0228                     u847:	
  1240  0228  0BB1               	decfsz	??_main,f
  1241  0229  2A28               	goto	u847
  1242  022A  0BB2               	decfsz	??_main+1,f
  1243  022B  2A28               	goto	u847
  1244  022C  0BB3               	decfsz	??_main+2,f
  1245  022D  2A28               	goto	u847
  1246  022E                     l1211:	
  1247                           
  1248                           ;main.c: 103:                 };
  1249  022E  3001               	movlw	1
  1250  022F  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0230  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0231  00B1               	movwf	??_main
  1253  0232  0831               	movf	??_main,w
  1254  0233  07B4               	addwf	main@k,f
  1255  0234                     l1213:	
  1256  0234  3004               	movlw	4
  1257  0235  0234               	subwf	main@k,w
  1258  0236  1C03               	skipc
  1259  0237  2A39               	goto	u581
  1260  0238  2A3A               	goto	u580
  1261  0239                     u581:	
  1262  0239  285E               	goto	l1111
  1263  023A                     u580:	
  1264  023A                     l1215:	
  1265                           
  1266                           ;main.c: 104:                 timer_for_demo=10;
  1267  023A  300A               	movlw	10
  1268  023B  00CD               	movwf	_timer_for_demo
  1269  023C  3000               	movlw	0
  1270  023D  00CE               	movwf	_timer_for_demo+1
  1271  023E                     l1217:	
  1272                           
  1273                           ;main.c: 106:             GIE = 1;
  1274  023E  178B               	bsf	11,7	;volatile
  1275                           
  1276                           ;main.c: 107:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  1277  023F  3006               	movlw	6
  1278  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0241  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0242  00B3               	movwf	??_main+2
  1281  0243  3013               	movlw	19
  1282  0244  00B2               	movwf	??_main+1
  1283  0245  30AD               	movlw	173
  1284  0246  00B1               	movwf	??_main
  1285  0247                     u857:	
  1286  0247  0BB1               	decfsz	??_main,f
  1287  0248  2A47               	goto	u857
  1288  0249  0BB2               	decfsz	??_main+1,f
  1289  024A  2A47               	goto	u857
  1290  024B  0BB3               	decfsz	??_main+2,f
  1291  024C  2A47               	goto	u857
  1292  024D  0000               	nop
  1293                           
  1294                           ;main.c: 108:             timer_for_demo--;
  1295  024E  30FF               	movlw	255
  1296  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0251  07CD               	addwf	_timer_for_demo,f
  1299  0252  1803               	skipnc
  1300  0253  0ACE               	incf	_timer_for_demo+1,f
  1301  0254  30FF               	movlw	255
  1302  0255  07CE               	addwf	_timer_for_demo+1,f
  1303  0256  284B               	goto	l1093
  1304  0257  280E               	ljmp	start
  1305  0258                     __end_of_main:	
  1306                           
  1307                           	psect	text1
  1308  0400                     __ptext1:	
  1309 ;; *************** function _srand *****************
  1310 ;; Defined at:
  1311 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/rand.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  x               2   15[BANK0 ] unsigned int 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1325 ;;      Params:         0       2       0       0
  1326 ;;      Locals:         0       0       0       0
  1327 ;;      Temps:          0       0       0       0
  1328 ;;      Totals:         0       2       0       0
  1329 ;;Total ram usage:        2 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    3
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_main
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           
  1340                           ;psect for function _srand
  1341  0400                     _srand:	
  1342  0400                     l993:	
  1343                           ;incstack = 0
  1344                           ; Regs used in _srand: [wreg]
  1345                           
  1346  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0402  082F               	movf	srand@x,w
  1349  0403  00C4               	movwf	_randx
  1350  0404  0830               	movf	srand@x+1,w
  1351  0405  00C5               	movwf	_randx+1
  1352  0406  01C6               	clrf	_randx+2
  1353  0407  01C7               	clrf	_randx+3
  1354  0408                     l644:	
  1355  0408  0008               	return
  1356  0409                     __end_of_srand:	
  1357                           
  1358                           	psect	text2
  1359  03D8                     __ptext2:	
  1360 ;; *************** function _InitApp *****************
  1361 ;; Defined at:
  1362 ;;		line 25 in file "user.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      void 
  1369 ;; Registers used:
  1370 ;;		wreg, status,2
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1376 ;;      Params:         0       0       0       0
  1377 ;;      Locals:         0       0       0       0
  1378 ;;      Temps:          0       0       0       0
  1379 ;;      Totals:         0       0       0       0
  1380 ;;Total ram usage:        0 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; Hardware stack levels required when called:    3
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           
  1391                           ;psect for function _InitApp
  1392  03D8                     _InitApp:	
  1393  03D8                     l987:	
  1394                           ;incstack = 0
  1395                           ; Regs used in _InitApp: [wreg+status,2]
  1396                           
  1397                           
  1398                           ;user.c: 28:     CMCON = 0b111;
  1399  03D8  3007               	movlw	7
  1400  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1401  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1402  03DB  009F               	movwf	31	;volatile
  1403                           
  1404                           ;user.c: 33:     TRISA = 0b10000000;
  1405  03DC  3080               	movlw	128
  1406  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  1407  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  1408  03DF  0085               	movwf	5	;volatile
  1409                           
  1410                           ;user.c: 34:     TRISB = 0b11110000;
  1411  03E0  30F0               	movlw	240
  1412  03E1  0086               	movwf	6	;volatile
  1413                           
  1414                           ;user.c: 37:     PORTA = 0b01111111;
  1415  03E2  307F               	movlw	127
  1416  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1417  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1418  03E5  0085               	movwf	5	;volatile
  1419  03E6                     l989:	
  1420                           
  1421                           ;user.c: 38:     PORTB=0;
  1422  03E6  0186               	clrf	6	;volatile
  1423  03E7                     l991:	
  1424                           
  1425                           ;user.c: 41:     INTCON = 0b10001000;
  1426  03E7  3088               	movlw	136
  1427  03E8  008B               	movwf	11	;volatile
  1428                           
  1429                           ;user.c: 42:     PIE1 = 0;
  1430  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  1431  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  1432  03EB  018C               	clrf	12	;volatile
  1433  03EC                     l111:	
  1434  03EC  0008               	return
  1435  03ED                     __end_of_InitApp:	
  1436                           
  1437                           	psect	text3
  1438  0409                     __ptext3:	
  1439 ;; *************** function _ConfigureOscillator *****************
  1440 ;; Defined at:
  1441 ;;		line 18 in file "system.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		None
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1455 ;;      Params:         0       0       0       0
  1456 ;;      Locals:         0       0       0       0
  1457 ;;      Temps:          0       0       0       0
  1458 ;;      Totals:         0       0       0       0
  1459 ;;Total ram usage:        0 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    3
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function _ConfigureOscillator
  1471  0409                     _ConfigureOscillator:	
  1472  0409                     l94:	
  1473                           ;incstack = 0
  1474                           ; Regs used in _ConfigureOscillator: []
  1475                           
  1476  0409  0008               	return
  1477  040A                     __end_of_ConfigureOscillator:	
  1478                           
  1479                           	psect	text4
  1480  0258                     __ptext4:	
  1481 ;; *************** function _my_isr_routine *****************
  1482 ;; Defined at:
  1483 ;;		line 49 in file "interrupts.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  j               1   12[BANK0 ] unsigned char 
  1488 ;;  j               1   14[BANK0 ] unsigned char 
  1489 ;;  i               1   13[BANK0 ] unsigned char 
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1499 ;;      Params:         0       0       0       0
  1500 ;;      Locals:         0       3       0       0
  1501 ;;      Temps:          0       5       0       0
  1502 ;;      Totals:         0       8       0       0
  1503 ;;Total ram usage:        8 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    2
  1506 ;; This function calls:
  1507 ;;		_rand
  1508 ;; This function is called by:
  1509 ;;		Interrupt level 1
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           
  1514                           ;psect for function _my_isr_routine
  1515  0258                     _my_isr_routine:	
  1516  0258                     i1l995:	
  1517                           
  1518                           ;interrupts.c: 51:     if (RBIF) {
  1519  0258  1C0B               	btfss	11,0	;volatile
  1520  0259  2A5B               	goto	u36_21
  1521  025A  2A5C               	goto	u36_20
  1522  025B                     u36_21:	
  1523  025B  2B46               	goto	i1l62
  1524  025C                     u36_20:	
  1525  025C                     i1l997:	
  1526                           
  1527                           ;interrupts.c: 53:         ii = 0;
  1528  025C  01D2               	clrf	_ii
  1529                           
  1530                           ;interrupts.c: 54:         for (unsigned char i=0; i<168; i++) {
  1531  025D  01AD               	clrf	my_isr_routine@i
  1532  025E                     i1l1003:	
  1533                           
  1534                           ;interrupts.c: 56:             if (i > delay[0]) { RA0=0; } else {RA0=1;};
  1535  025E  082D               	movf	my_isr_routine@i,w
  1536  025F  023A               	subwf	_delay,w
  1537  0260  1803               	skipnc
  1538  0261  2A63               	goto	u37_21
  1539  0262  2A64               	goto	u37_20
  1540  0263                     u37_21:	
  1541  0263  2A66               	goto	i1l38
  1542  0264                     u37_20:	
  1543  0264                     i1l1005:	
  1544  0264  1005               	bcf	5,0	;volatile
  1545  0265  2A67               	goto	i1l1007
  1546  0266                     i1l38:	
  1547  0266  1405               	bsf	5,0	;volatile
  1548  0267                     i1l1007:	
  1549                           
  1550                           ;interrupts.c: 57:             if (i > delay[1]) { RA1=0; } else {RA1=1;};
  1551  0267  082D               	movf	my_isr_routine@i,w
  1552  0268  023B               	subwf	_delay+1,w
  1553  0269  1803               	skipnc
  1554  026A  2A6C               	goto	u38_21
  1555  026B  2A6D               	goto	u38_20
  1556  026C                     u38_21:	
  1557  026C  2A6F               	goto	i1l40
  1558  026D                     u38_20:	
  1559  026D                     i1l1009:	
  1560  026D  1085               	bcf	5,1	;volatile
  1561  026E  2A70               	goto	i1l1011
  1562  026F                     i1l40:	
  1563  026F  1485               	bsf	5,1	;volatile
  1564  0270                     i1l1011:	
  1565                           
  1566                           ;interrupts.c: 58:             if (i > delay[2]) { RA2=0; } else {RA2=1;};
  1567  0270  082D               	movf	my_isr_routine@i,w
  1568  0271  023C               	subwf	_delay+2,w
  1569  0272  1803               	skipnc
  1570  0273  2A75               	goto	u39_21
  1571  0274  2A76               	goto	u39_20
  1572  0275                     u39_21:	
  1573  0275  2A78               	goto	i1l42
  1574  0276                     u39_20:	
  1575  0276                     i1l1013:	
  1576  0276  1105               	bcf	5,2	;volatile
  1577  0277  2A79               	goto	i1l1015
  1578  0278                     i1l42:	
  1579  0278  1505               	bsf	5,2	;volatile
  1580  0279                     i1l1015:	
  1581                           
  1582                           ;interrupts.c: 59:             if (i > delay[3]) { RA3=0; } else {RA3=1;};
  1583  0279  082D               	movf	my_isr_routine@i,w
  1584  027A  023D               	subwf	_delay+3,w
  1585  027B  1803               	skipnc
  1586  027C  2A7E               	goto	u40_21
  1587  027D  2A7F               	goto	u40_20
  1588  027E                     u40_21:	
  1589  027E  2A81               	goto	i1l44
  1590  027F                     u40_20:	
  1591  027F                     i1l1017:	
  1592  027F  1185               	bcf	5,3	;volatile
  1593  0280  2A82               	goto	i1l1019
  1594  0281                     i1l44:	
  1595  0281  1585               	bsf	5,3	;volatile
  1596  0282                     i1l1019:	
  1597                           
  1598                           ;interrupts.c: 60:             if (i > delay[4]) { RA4=0; } else {RA4=1;};
  1599  0282  082D               	movf	my_isr_routine@i,w
  1600  0283  023E               	subwf	_delay+4,w
  1601  0284  1803               	skipnc
  1602  0285  2A87               	goto	u41_21
  1603  0286  2A88               	goto	u41_20
  1604  0287                     u41_21:	
  1605  0287  2A8A               	goto	i1l46
  1606  0288                     u41_20:	
  1607  0288                     i1l1021:	
  1608  0288  1205               	bcf	5,4	;volatile
  1609  0289  2A8B               	goto	i1l1023
  1610  028A                     i1l46:	
  1611  028A  1605               	bsf	5,4	;volatile
  1612  028B                     i1l1023:	
  1613                           
  1614                           ;interrupts.c: 62:         };
  1615  028B  3001               	movlw	1
  1616  028C  00A7               	movwf	??_my_isr_routine
  1617  028D  0827               	movf	??_my_isr_routine,w
  1618  028E  07AD               	addwf	my_isr_routine@i,f
  1619  028F                     i1l1025:	
  1620  028F  30A8               	movlw	168
  1621  0290  022D               	subwf	my_isr_routine@i,w
  1622  0291  1C03               	skipc
  1623  0292  2A94               	goto	u42_21
  1624  0293  2A95               	goto	u42_20
  1625  0294                     u42_21:	
  1626  0294  2A5E               	goto	i1l1003
  1627  0295                     u42_20:	
  1628  0295                     i1l1027:	
  1629                           
  1630                           ;interrupts.c: 65:         for (char j=0; j<5; j++) {
  1631  0295  01AE               	clrf	my_isr_routine@j
  1632  0296                     i1l1033:	
  1633                           
  1634                           ;interrupts.c: 66:             if (old_state[j]==0 && new_state[j]==0) {
  1635  0296  082E               	movf	my_isr_routine@j,w
  1636  0297  3E48               	addlw	(low (_old_state| 0))& (0+255)
  1637  0298  0084               	movwf	4
  1638  0299  1383               	bcf	3,7	;select IRP bank0
  1639  029A  0800               	movf	0,w
  1640  029B  1D03               	btfss	3,2
  1641  029C  2A9E               	goto	u43_21
  1642  029D  2A9F               	goto	u43_20
  1643  029E                     u43_21:	
  1644  029E  2AAF               	goto	i1l1039
  1645  029F                     u43_20:	
  1646  029F                     i1l1035:	
  1647  029F  082E               	movf	my_isr_routine@j,w
  1648  02A0  3E3F               	addlw	(low (_new_state| 0))& (0+255)
  1649  02A1  0084               	movwf	4
  1650  02A2  0800               	movf	0,w
  1651  02A3  1D03               	btfss	3,2
  1652  02A4  2AA6               	goto	u44_21
  1653  02A5  2AA7               	goto	u44_20
  1654  02A6                     u44_21:	
  1655  02A6  2AAF               	goto	i1l1039
  1656  02A7                     u44_20:	
  1657  02A7                     i1l1037:	
  1658                           
  1659                           ;interrupts.c: 67:                 delay[j] = 168*1;
  1660  02A7  30A8               	movlw	168
  1661  02A8  00A7               	movwf	??_my_isr_routine
  1662  02A9  082E               	movf	my_isr_routine@j,w
  1663  02AA  3E3A               	addlw	(low (_delay| 0))& (0+255)
  1664  02AB  0084               	movwf	4
  1665  02AC  0827               	movf	??_my_isr_routine,w
  1666  02AD  0080               	movwf	0
  1667                           
  1668                           ;interrupts.c: 68:             } else if (old_state[j]==0 && new_state[j]==1) {
  1669  02AE  2AFC               	goto	i1l1057
  1670  02AF                     i1l1039:	
  1671  02AF  082E               	movf	my_isr_routine@j,w
  1672  02B0  3E48               	addlw	(low (_old_state| 0))& (0+255)
  1673  02B1  0084               	movwf	4
  1674  02B2  0800               	movf	0,w
  1675  02B3  1D03               	btfss	3,2
  1676  02B4  2AB6               	goto	u45_21
  1677  02B5  2AB7               	goto	u45_20
  1678  02B6                     u45_21:	
  1679  02B6  2AD2               	goto	i1l1047
  1680  02B7                     u45_20:	
  1681  02B7                     i1l1041:	
  1682  02B7  082E               	movf	my_isr_routine@j,w
  1683  02B8  3E3F               	addlw	(low (_new_state| 0))& (0+255)
  1684  02B9  0084               	movwf	4
  1685  02BA  0300               	decf	0,w
  1686  02BB  1D03               	btfss	3,2
  1687  02BC  2ABE               	goto	u46_21
  1688  02BD  2ABF               	goto	u46_20
  1689  02BE                     u46_21:	
  1690  02BE  2AD2               	goto	i1l1047
  1691  02BF                     u46_20:	
  1692  02BF                     i1l1043:	
  1693                           
  1694                           ;interrupts.c: 69:                 delay[j]--;
  1695  02BF  082E               	movf	my_isr_routine@j,w
  1696  02C0  3E3A               	addlw	(low (_delay| 0))& (0+255)
  1697  02C1  0084               	movwf	4
  1698  02C2  3001               	movlw	1
  1699  02C3  0280               	subwf	0,f
  1700                           
  1701                           ;interrupts.c: 70:                 if (delay[j]==0) {
  1702  02C4  082E               	movf	my_isr_routine@j,w
  1703  02C5  3E3A               	addlw	(low (_delay| 0))& (0+255)
  1704  02C6  0084               	movwf	4
  1705  02C7  0800               	movf	0,w
  1706  02C8  1D03               	btfss	3,2
  1707  02C9  2ACB               	goto	u47_21
  1708  02CA  2ACC               	goto	u47_20
  1709  02CB                     u47_21:	
  1710  02CB  2AFC               	goto	i1l1057
  1711  02CC                     u47_20:	
  1712  02CC                     i1l1045:	
  1713                           
  1714                           ;interrupts.c: 71:                     old_state[j]=1;
  1715  02CC  082E               	movf	my_isr_routine@j,w
  1716  02CD  3E48               	addlw	(low (_old_state| 0))& (0+255)
  1717  02CE  0084               	movwf	4
  1718  02CF  0180               	clrf	0
  1719  02D0  0A80               	incf	0,f
  1720  02D1  2AFC               	goto	i1l1057
  1721  02D2                     i1l1047:	
  1722  02D2  082E               	movf	my_isr_routine@j,w
  1723  02D3  3E48               	addlw	(low (_old_state| 0))& (0+255)
  1724  02D4  0084               	movwf	4
  1725  02D5  0300               	decf	0,w
  1726  02D6  1D03               	btfss	3,2
  1727  02D7  2AD9               	goto	u48_21
  1728  02D8  2ADA               	goto	u48_20
  1729  02D9                     u48_21:	
  1730  02D9  2AF7               	goto	i1l1055
  1731  02DA                     u48_20:	
  1732  02DA                     i1l1049:	
  1733  02DA  082E               	movf	my_isr_routine@j,w
  1734  02DB  3E3F               	addlw	(low (_new_state| 0))& (0+255)
  1735  02DC  0084               	movwf	4
  1736  02DD  0800               	movf	0,w
  1737  02DE  1D03               	btfss	3,2
  1738  02DF  2AE1               	goto	u49_21
  1739  02E0  2AE2               	goto	u49_20
  1740  02E1                     u49_21:	
  1741  02E1  2AF7               	goto	i1l1055
  1742  02E2                     u49_20:	
  1743  02E2                     i1l1051:	
  1744                           
  1745                           ;interrupts.c: 74:                 delay[j]++;
  1746  02E2  3001               	movlw	1
  1747  02E3  00A7               	movwf	??_my_isr_routine
  1748  02E4  082E               	movf	my_isr_routine@j,w
  1749  02E5  3E3A               	addlw	(low (_delay| 0))& (0+255)
  1750  02E6  0084               	movwf	4
  1751  02E7  0827               	movf	??_my_isr_routine,w
  1752  02E8  0780               	addwf	0,f
  1753                           
  1754                           ;interrupts.c: 75:                 if (delay[j]==168*1) {
  1755  02E9  082E               	movf	my_isr_routine@j,w
  1756  02EA  3E3A               	addlw	(low (_delay| 0))& (0+255)
  1757  02EB  0084               	movwf	4
  1758  02EC  30A8               	movlw	168
  1759  02ED  0600               	xorwf	0,w
  1760  02EE  1D03               	btfss	3,2
  1761  02EF  2AF1               	goto	u50_21
  1762  02F0  2AF2               	goto	u50_20
  1763  02F1                     u50_21:	
  1764  02F1  2AFC               	goto	i1l54
  1765  02F2                     u50_20:	
  1766  02F2                     i1l1053:	
  1767                           
  1768                           ;interrupts.c: 76:                     old_state[j]=0;
  1769  02F2  082E               	movf	my_isr_routine@j,w
  1770  02F3  3E48               	addlw	(low (_old_state| 0))& (0+255)
  1771  02F4  0084               	movwf	4
  1772  02F5  0180               	clrf	0
  1773  02F6  2AFC               	goto	i1l1057
  1774  02F7                     i1l1055:	
  1775                           
  1776                           ;interrupts.c: 79:                 delay[j]=0;
  1777  02F7  082E               	movf	my_isr_routine@j,w
  1778  02F8  3E3A               	addlw	(low (_delay| 0))& (0+255)
  1779  02F9  0084               	movwf	4
  1780  02FA  0180               	clrf	0
  1781  02FB  2AFC               	goto	i1l1057
  1782  02FC                     i1l54:	
  1783  02FC                     i1l1057:	
  1784                           
  1785                           ;interrupts.c: 81:         };
  1786  02FC  3001               	movlw	1
  1787  02FD  00A7               	movwf	??_my_isr_routine
  1788  02FE  0827               	movf	??_my_isr_routine,w
  1789  02FF  07AE               	addwf	my_isr_routine@j,f
  1790  0300                     i1l1059:	
  1791  0300  3005               	movlw	5
  1792  0301  022E               	subwf	my_isr_routine@j,w
  1793  0302  1C03               	skipc
  1794  0303  2B05               	goto	u51_21
  1795  0304  2B06               	goto	u51_20
  1796  0305                     u51_21:	
  1797  0305  2A96               	goto	i1l1033
  1798  0306                     u51_20:	
  1799  0306                     i1l1061:	
  1800                           
  1801                           ;interrupts.c: 83:         counter++;
  1802  0306  3001               	movlw	1
  1803  0307  07CF               	addwf	_counter,f
  1804  0308  1803               	skipnc
  1805  0309  0AD0               	incf	_counter+1,f
  1806  030A  3000               	movlw	0
  1807  030B  07D0               	addwf	_counter+1,f
  1808  030C                     i1l1063:	
  1809                           
  1810                           ;interrupts.c: 84:         if (counter==168*1) {
  1811  030C  30A8               	movlw	168
  1812  030D  064F               	xorwf	_counter,w
  1813  030E  0450               	iorwf	_counter+1,w
  1814  030F  1D03               	btfss	3,2
  1815  0310  2B12               	goto	u52_21
  1816  0311  2B13               	goto	u52_20
  1817  0312                     u52_21:	
  1818  0312  2B44               	goto	i1l1083
  1819  0313                     u52_20:	
  1820  0313                     i1l1065:	
  1821                           
  1822                           ;interrupts.c: 85:             counter = 0;
  1823  0313  01CF               	clrf	_counter
  1824  0314  01D0               	clrf	_counter+1
  1825                           
  1826                           ;interrupts.c: 86:             for (char j=0; j<5; j++) {
  1827  0315  01AC               	clrf	my_isr_routine@j_47
  1828  0316                     i1l1071:	
  1829                           
  1830                           ;interrupts.c: 88:                 new_state[j] = ((sample[j]>>bit_counter)|rand()) & 0b
      +                          00000001;
  1831  0316  2395               	fcall	_rand
  1832  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1833  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1834  0319  082C               	movf	my_isr_routine@j_47,w
  1835  031A  3E35               	addlw	(low (_sample| 0))& (0+255)
  1836  031B  0084               	movwf	4
  1837  031C  1383               	bcf	3,7	;select IRP bank0
  1838  031D  0800               	movf	0,w
  1839  031E  00A7               	movwf	??_my_isr_routine
  1840  031F  0A51               	incf	_bit_counter,w
  1841  0320  2B23               	goto	u53_24
  1842  0321                     u53_25:	
  1843  0321  1003               	clrc
  1844  0322  0CA7               	rrf	??_my_isr_routine,f
  1845  0323                     u53_24:	
  1846  0323  3EFF               	addlw	-1
  1847  0324  1D03               	skipz
  1848  0325  2B21               	goto	u53_25
  1849  0326  0827               	movf	??_my_isr_routine,w
  1850  0327  0420               	iorwf	?_rand,w
  1851  0328  3901               	andlw	1
  1852  0329  00A8               	movwf	??_my_isr_routine+1
  1853  032A  082C               	movf	my_isr_routine@j_47,w
  1854  032B  3E3F               	addlw	(low (_new_state| 0))& (0+255)
  1855  032C  0084               	movwf	4
  1856  032D  0828               	movf	??_my_isr_routine+1,w
  1857  032E  0080               	movwf	0
  1858  032F                     i1l1073:	
  1859                           
  1860                           ;interrupts.c: 89:             };
  1861  032F  3001               	movlw	1
  1862  0330  00A7               	movwf	??_my_isr_routine
  1863  0331  0827               	movf	??_my_isr_routine,w
  1864  0332  07AC               	addwf	my_isr_routine@j_47,f
  1865  0333                     i1l1075:	
  1866  0333  3005               	movlw	5
  1867  0334  022C               	subwf	my_isr_routine@j_47,w
  1868  0335  1C03               	skipc
  1869  0336  2B38               	goto	u54_21
  1870  0337  2B39               	goto	u54_20
  1871  0338                     u54_21:	
  1872  0338  2B16               	goto	i1l1071
  1873  0339                     u54_20:	
  1874  0339                     i1l1077:	
  1875                           
  1876                           ;interrupts.c: 90:             bit_counter++; if (bit_counter>7) bit_counter=0;
  1877  0339  3001               	movlw	1
  1878  033A  00A7               	movwf	??_my_isr_routine
  1879  033B  0827               	movf	??_my_isr_routine,w
  1880  033C  07D1               	addwf	_bit_counter,f
  1881  033D                     i1l1079:	
  1882  033D  3008               	movlw	8
  1883  033E  0251               	subwf	_bit_counter,w
  1884  033F  1C03               	skipc
  1885  0340  2B42               	goto	u55_21
  1886  0341  2B43               	goto	u55_20
  1887  0342                     u55_21:	
  1888  0342  2B44               	goto	i1l1083
  1889  0343                     u55_20:	
  1890  0343                     i1l1081:	
  1891  0343  01D1               	clrf	_bit_counter
  1892  0344                     i1l1083:	
  1893                           
  1894                           ;interrupts.c: 93:         PORTB;
  1895  0344  0806               	movf	6,w	;volatile
  1896  0345                     i1l1085:	
  1897                           
  1898                           ;interrupts.c: 94:         RBIF = 0;
  1899  0345  100B               	bcf	11,0	;volatile
  1900  0346                     i1l62:	
  1901  0346  082B               	movf	??_my_isr_routine+4,w
  1902  0347  008A               	movwf	10
  1903  0348  082A               	movf	??_my_isr_routine+3,w
  1904  0349  0084               	movwf	4
  1905  034A  0E29               	swapf	(??_my_isr_routine+2)^0,w
  1906  034B  0083               	movwf	3
  1907  034C  0EFE               	swapf	btemp,f
  1908  034D  0E7E               	swapf	btemp,w
  1909  034E  0009               	retfie
  1910  034F                     __end_of_my_isr_routine:	
  1911                           
  1912                           	psect	intentry
  1913  0004                     __pintentry:	
  1914                           ;incstack = 0
  1915                           ; Regs used in _my_isr_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1916                           
  1917  0004                     interrupt_function:	
  1918  007E                     saved_w	set	btemp
  1919  0004  00FE               	movwf	btemp
  1920  0005  0E03               	swapf	3,w
  1921  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0008  00A9               	movwf	??_my_isr_routine+2
  1924  0009  0804               	movf	4,w
  1925  000A  00AA               	movwf	??_my_isr_routine+3
  1926  000B  080A               	movf	10,w
  1927  000C  00AB               	movwf	??_my_isr_routine+4
  1928  000D  2A58               	ljmp	_my_isr_routine
  1929                           
  1930                           	psect	text5
  1931  0395                     __ptext5:	
  1932 ;; *************** function _rand *****************
  1933 ;; Defined at:
  1934 ;;		line 12 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/rand.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  2    0[BANK0 ] int 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0, pclath, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1948 ;;      Params:         0       2       0       0
  1949 ;;      Locals:         0       0       0       0
  1950 ;;      Temps:          0       5       0       0
  1951 ;;      Totals:         0       7       0       0
  1952 ;;Total ram usage:        7 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    1
  1955 ;; This function calls:
  1956 ;;		___lmul
  1957 ;; This function is called by:
  1958 ;;		_my_isr_routine
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function _rand
  1964  0395                     _rand:	
  1965  0395                     i1l979:	
  1966                           ;incstack = 0
  1967                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1968                           
  1969  0395  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0396  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0397  0847               	movf	_randx+3,w
  1972  0398  00F3               	movwf	___lmul@multiplier+3
  1973  0399  0846               	movf	_randx+2,w
  1974  039A  00F2               	movwf	___lmul@multiplier+2
  1975  039B  0845               	movf	_randx+1,w
  1976  039C  00F1               	movwf	___lmul@multiplier+1
  1977  039D  0844               	movf	_randx,w
  1978  039E  00F0               	movwf	___lmul@multiplier
  1979  039F  3041               	movlw	65
  1980  03A0  00F7               	movwf	___lmul@multiplicand+3
  1981  03A1  30C6               	movlw	198
  1982  03A2  00F6               	movwf	___lmul@multiplicand+2
  1983  03A3  304E               	movlw	78
  1984  03A4  00F5               	movwf	___lmul@multiplicand+1
  1985  03A5  306D               	movlw	109
  1986  03A6  00F4               	movwf	___lmul@multiplicand
  1987  03A7  234F               	fcall	___lmul
  1988  03A8  0873               	movf	?___lmul+3,w
  1989  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1990  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1991  03AB  00C7               	movwf	_randx+3
  1992  03AC  0872               	movf	?___lmul+2,w
  1993  03AD  00C6               	movwf	_randx+2
  1994  03AE  0871               	movf	?___lmul+1,w
  1995  03AF  00C5               	movwf	_randx+1
  1996  03B0  0870               	movf	?___lmul,w
  1997  03B1  00C4               	movwf	_randx
  1998  03B2                     i1l981:	
  1999  03B2  3039               	movlw	57
  2000  03B3  07C4               	addwf	_randx,f
  2001  03B4  3030               	movlw	48
  2002  03B5  1803               	skipnc
  2003  03B6  3031               	movlw	49
  2004  03B7  07C5               	addwf	_randx+1,f
  2005  03B8  3000               	movlw	0
  2006  03B9  1803               	skipnc
  2007  03BA  3001               	movlw	1
  2008  03BB  07C6               	addwf	_randx+2,f
  2009  03BC  3000               	movlw	0
  2010  03BD  1803               	skipnc
  2011  03BE  3001               	movlw	1
  2012  03BF  07C7               	addwf	_randx+3,f
  2013  03C0                     i1l983:	
  2014  03C0  0844               	movf	_randx,w
  2015  03C1  00A2               	movwf	??_rand
  2016  03C2  0845               	movf	_randx+1,w
  2017  03C3  00A3               	movwf	??_rand+1
  2018  03C4  0846               	movf	_randx+2,w
  2019  03C5  00A4               	movwf	??_rand+2
  2020  03C6  0847               	movf	_randx+3,w
  2021  03C7  00A5               	movwf	??_rand+3
  2022  03C8  3010               	movlw	16
  2023  03C9  00A6               	movwf	??_rand+4
  2024  03CA                     u35_25:	
  2025  03CA  0D25               	rlf	??_rand+3,w
  2026  03CB  0CA5               	rrf	??_rand+3,f
  2027  03CC  0CA4               	rrf	??_rand+2,f
  2028  03CD  0CA3               	rrf	??_rand+1,f
  2029  03CE  0CA2               	rrf	??_rand,f
  2030  03CF                     u35_20:	
  2031  03CF  0BA6               	decfsz	??_rand+4,f
  2032  03D0  2BCA               	goto	u35_25
  2033  03D1  30FF               	movlw	255
  2034  03D2  0522               	andwf	??_rand,w
  2035  03D3  00A0               	movwf	?_rand
  2036  03D4  307F               	movlw	127
  2037  03D5  0523               	andwf	??_rand+1,w
  2038  03D6  00A1               	movwf	?_rand+1
  2039  03D7                     i1l647:	
  2040  03D7  0008               	return
  2041  03D8                     __end_of_rand:	
  2042                           
  2043                           	psect	text6
  2044  034F                     __ptext6:	
  2045 ;; *************** function ___lmul *****************
  2046 ;; Defined at:
  2047 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul32.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  multiplier      4    0[COMMON] unsigned long 
  2050 ;;  multiplicand    4    4[COMMON] unsigned long 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  product         4    9[COMMON] unsigned long 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  4    0[COMMON] unsigned long 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2062 ;;      Params:         8       0       0       0
  2063 ;;      Locals:         4       0       0       0
  2064 ;;      Temps:          1       0       0       0
  2065 ;;      Totals:        13       0       0       0
  2066 ;;Total ram usage:       13 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_rand
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           
  2076                           ;psect for function ___lmul
  2077  034F                     ___lmul:	
  2078  034F                     i1l965:	
  2079                           ;incstack = 0
  2080                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2081                           
  2082  034F  3000               	movlw	0
  2083  0350  00FC               	movwf	___lmul@product+3
  2084  0351  3000               	movlw	0
  2085  0352  00FB               	movwf	___lmul@product+2
  2086  0353  3000               	movlw	0
  2087  0354  00FA               	movwf	___lmul@product+1
  2088  0355  3000               	movlw	0
  2089  0356  00F9               	movwf	___lmul@product
  2090  0357                     i1l967:	
  2091  0357  1C70               	btfss	___lmul@multiplier,0
  2092  0358  2B5A               	goto	u30_21
  2093  0359  2B5B               	goto	u30_20
  2094  035A                     u30_21:	
  2095  035A  2B72               	goto	i1l971
  2096  035B                     u30_20:	
  2097  035B                     i1l969:	
  2098  035B  0874               	movf	___lmul@multiplicand,w
  2099  035C  07F9               	addwf	___lmul@product,f
  2100  035D  0875               	movf	___lmul@multiplicand+1,w
  2101  035E  1103               	clrz
  2102  035F  1803               	skipnc
  2103  0360  3E01               	addlw	1
  2104  0361  1903               	skipnz
  2105  0362  2B64               	goto	u31_21
  2106  0363  07FA               	addwf	___lmul@product+1,f
  2107  0364                     u31_21:	
  2108  0364  0876               	movf	___lmul@multiplicand+2,w
  2109  0365  1103               	clrz
  2110  0366  1803               	skipnc
  2111  0367  3E01               	addlw	1
  2112  0368  1903               	skipnz
  2113  0369  2B6B               	goto	u31_22
  2114  036A  07FB               	addwf	___lmul@product+2,f
  2115  036B                     u31_22:	
  2116  036B  0877               	movf	___lmul@multiplicand+3,w
  2117  036C  1103               	clrz
  2118  036D  1803               	skipnc
  2119  036E  3E01               	addlw	1
  2120  036F  1903               	skipnz
  2121  0370  2B72               	goto	u31_23
  2122  0371  07FC               	addwf	___lmul@product+3,f
  2123  0372                     u31_23:	
  2124  0372                     i1l971:	
  2125  0372  3001               	movlw	1
  2126  0373  00F8               	movwf	??___lmul
  2127  0374                     u32_25:	
  2128  0374  1003               	clrc
  2129  0375  0DF4               	rlf	___lmul@multiplicand,f
  2130  0376  0DF5               	rlf	___lmul@multiplicand+1,f
  2131  0377  0DF6               	rlf	___lmul@multiplicand+2,f
  2132  0378  0DF7               	rlf	___lmul@multiplicand+3,f
  2133  0379  0BF8               	decfsz	??___lmul,f
  2134  037A  2B74               	goto	u32_25
  2135  037B                     i1l973:	
  2136  037B  3001               	movlw	1
  2137  037C                     u33_25:	
  2138  037C  1003               	clrc
  2139  037D  0CF3               	rrf	___lmul@multiplier+3,f
  2140  037E  0CF2               	rrf	___lmul@multiplier+2,f
  2141  037F  0CF1               	rrf	___lmul@multiplier+1,f
  2142  0380  0CF0               	rrf	___lmul@multiplier,f
  2143  0381  3EFF               	addlw	-1
  2144  0382  1D03               	skipz
  2145  0383  2B7C               	goto	u33_25
  2146  0384  0873               	movf	___lmul@multiplier+3,w
  2147  0385  0472               	iorwf	___lmul@multiplier+2,w
  2148  0386  0471               	iorwf	___lmul@multiplier+1,w
  2149  0387  0470               	iorwf	___lmul@multiplier,w
  2150  0388  1D03               	skipz
  2151  0389  2B8B               	goto	u34_21
  2152  038A  2B8C               	goto	u34_20
  2153  038B                     u34_21:	
  2154  038B  2B57               	goto	i1l967
  2155  038C                     u34_20:	
  2156  038C                     i1l975:	
  2157  038C  087C               	movf	___lmul@product+3,w
  2158  038D  00F3               	movwf	?___lmul+3
  2159  038E  087B               	movf	___lmul@product+2,w
  2160  038F  00F2               	movwf	?___lmul+2
  2161  0390  087A               	movf	___lmul@product+1,w
  2162  0391  00F1               	movwf	?___lmul+1
  2163  0392  0879               	movf	___lmul@product,w
  2164  0393  00F0               	movwf	?___lmul
  2165  0394                     i1l211:	
  2166  0394  0008               	return
  2167  0395                     __end_of___lmul:	
  2168  007E                     btemp	set	126	;btemp
  2169  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        19
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     21      51
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr_routine in COMMON

    _rand->___lmul

Critical Paths under _main in BANK0

    _main->_srand

Critical Paths under _my_isr_routine in BANK0

    _my_isr_routine->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     144
                                             17 BANK0      4     4      0
                _ConfigureOscillator
                            _InitApp
                              _srand
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      98
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _my_isr_routine                                       8     8      0     844
                                              7 BANK0      8     8      0
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 7     5      2     244
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _srand

 _my_isr_routine (ROOT)
   _rand
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      33       3       63.8%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      40      10        0.0%
ABS                  0      0      40       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 15 16:14:13 2019

                 __CFG_CP$OFF 0000                            l94 0409                            _ii 0052  
                         l111 03EC                           l644 0408                           l991 03E7  
                         l993 0400                           l987 03D8                           _GIE 005F  
                         l989 03E6                           _RA0 0028                           _RA1 0029  
                         _RA2 002A                           _RA3 002B                           _RA4 002C  
                         _RA7 002F                  __CFG_CPD$OFF 0000                           u607 0079  
                         u560 0051                           u617 008B                           u561 0050  
                         u570 005C                           u707 012D                           u627 009D  
                         u571 005B                           u580 023A                           u581 0239  
                         u717 013F                           u637 00AF                           u807 01E0  
                         u727 0151                           u647 00C1                           u817 01F2  
                         u737 0163                           u657 00D3                           u827 0204  
                         u747 0174                           u667 00E5                           u837 0216  
                         u757 0186                           u677 00F7                           u597 0068  
                         u847 0228                           u767 0198                           u687 0109  
                         u857 0247                           u777 01AA                           u697 011B  
                         u787 01BC                           u797 01CE                           fsr0 0004  
                         indf 0000                  __CFG_LVP$OFF 0000                          l1101 0056  
                        l1111 005E                          l1103 005C                          l1201 01FC  
                        l1121 0091                          l1113 006E                          l1105 005D  
                        l1211 022E                          l1203 020A                          l1131 00B9  
                        l1123 0095                          l1115 0071                          l1213 0234  
                        l1205 020E                          l1141 00EB                          l1133 00C7  
                        l1125 00A3                          l1117 007F                          l1215 023A  
                        l1207 021C                          l1151 0113                          l1143 00EF  
                        l1135 00CB                          l1127 00A7                          l1119 0083  
                        l1209 0220                          l1161 0145                          l1153 0121  
                        l1145 00FD                          l1137 00D9                          l1129 00B5  
                        l1217 023E                          l1171 017A                          l1163 0149  
                        l1155 0125                          l1147 0101                          l1139 00DD  
                        l1091 0044                          l1181 01A2                          l1173 017E  
                        l1165 0157                          l1157 0133                          l1149 010F  
                        l1093 004B                          l1191 01D4                          l1183 01B0  
                        l1175 018C                          l1167 015B                          l1159 0137  
                        l1095 0051                          l1087 0042                          l1193 01D8  
                        l1185 01B4                          l1177 0190                          l1169 016C  
                        l1097 0052                          l1089 0043                          l1195 01E6  
                        l1187 01C2                          l1179 019E                          l1099 0054  
                        l1197 01EA                          l1189 01C6                          l1199 01F8  
                        _PIE1 008C                          i1l40 026F                          _RBIF 0058  
                        i1l42 0278                          i1l44 0281                          i1l54 02FC  
                        i1l46 028A                          i1l38 0266                          i1l62 0346  
                        _main 0042                          _rand 0395                          btemp 007E  
                        start 000E               __end_of_InitApp 03ED                         ?_main 0070  
                       ?_rand 0020                 __CFG_WDTE$OFF 0000                         _CMCON 001F  
                       i1l211 0394                         i1l647 03D7                         i1l971 0372  
                       i1l973 037B                         i1l965 034F                         i1l981 03B2  
                       i1l975 038C                         i1l967 0357                         i1l983 03C0  
                       i1l969 035B                         i1l979 0395                         i1l995 0258  
                       i1l997 025C                         u30_20 035B                         u30_21 035A  
                       u31_21 0364                         u31_22 036B                         u31_23 0372  
                       u40_20 027F                         u40_21 027E                         u32_25 0374  
                       u41_20 0288                         u41_21 0287                         u33_25 037C  
                       u34_20 038C                         u50_20 02F2                         u42_20 0295  
                       u34_21 038B                         u50_21 02F1                         u42_21 0294  
                       u35_20 03CF                         u51_20 0306                         u43_20 029F  
                       u51_21 0305                         u43_21 029E                         _PORTA 0005  
                       _PORTB 0006                         u35_25 03CA                         u52_20 0313  
                       u44_20 02A7                         u36_20 025C                         u52_21 0312  
                       u44_21 02A6                         u36_21 025B                         u45_20 02B7  
                       u37_20 0264                         u45_21 02B6                         u37_21 0263  
                       u53_24 0323                         u53_25 0321                         u54_20 0339  
                       u46_20 02BF                         u38_20 026D                         u54_21 0338  
                       u46_21 02BE                         u38_21 026C                         u55_20 0343  
                       u47_20 02CC                         u39_20 0276                         u55_21 0342  
                       u47_21 02CB                         u39_21 0275                         u48_20 02DA  
                       u48_21 02D9                         u49_20 02E2                         u49_21 02E1  
                       _TRISA 0085                         _TRISB 0086           _ConfigureOscillator 0409  
         ___lmul@multiplicand 0074                         _delay 003A                         _randx 0044  
                       _srand 0400                         main@k 0034                __CFG_BOREN$OFF 0000  
                       pclath 000A                         status 0003                         wtemp0 007E  
        ?_ConfigureOscillator 0070                __CFG_MCLRE$OFF 0000               __initialization 000F  
                __end_of_main 0258                  __end_of_rand 03D8                        ??_main 0031  
                      ??_rand 0022                        ?_srand 002F                        i1l1011 0270  
                      i1l1003 025E                        i1l1021 0288                        i1l1013 0276  
                      i1l1005 0264                        i1l1023 028B                        i1l1015 0279  
                      i1l1007 0267                        i1l1041 02B7                        i1l1033 0296  
                      i1l1025 028F                        i1l1017 027F                        i1l1009 026D  
                      i1l1051 02E2                        i1l1043 02BF                        i1l1035 029F  
                      i1l1027 0295                        i1l1019 0282                        i1l1061 0306  
                      i1l1053 02F2                        i1l1045 02CC                        i1l1037 02A7  
                      i1l1071 0316                        i1l1063 030C                        i1l1055 02F7  
                      i1l1047 02D2                        i1l1039 02AF                        i1l1081 0343  
                      i1l1073 032F                        i1l1065 0313                        i1l1049 02DA  
                      i1l1057 02FC                        i1l1075 0333                        i1l1083 0344  
                      i1l1059 0300                        i1l1085 0345                        i1l1077 0339  
                      i1l1079 033D                        _INTCON 000B                     ??_InitApp 002F  
       ??_ConfigureOscillator 002F                __CFG_PWRTE$OFF 0000                        ___lmul 034F  
                      _sample 0035                        saved_w 007E                        srand@x 002F  
     __end_of__initialization 0040                __pcstackCOMMON 0070                  __pidataBANK0 03ED  
               __end_of_srand 0409                       ??_srand 0031                    __pbssBANK0 0048  
                  __pmaintext 0042                       ?___lmul 0070                    __pintentry 0004  
              ___lmul@product 0079               my_isr_routine@i 002D               my_isr_routine@j 002E  
     __size_of_my_isr_routine 00F7                       _InitApp 03D8               __size_of___lmul 0046  
                     __ptext1 0400                       __ptext2 03D8                       __ptext3 0409  
                     __ptext4 0258                       __ptext5 0395                       __ptext6 034F  
                     _counter 004F          end_of_initialization 0040   __end_of_ConfigureOscillator 040A  
              __end_of___lmul 0395           start_initialization 000F                _my_isr_routine 0258  
                    ??___lmul 0078                   __pdataBANK0 0035                     ___latbits 0000  
               __pcstackBANK0 0020        __end_of_my_isr_routine 034F                      ?_InitApp 0070  
                 _bit_counter 0051               ?_my_isr_routine 0070                __size_of_srand 0009  
                   _old_state 0048             interrupt_function 0004                     _new_state 003F  
              _timer_for_demo 004D             ___lmul@multiplier 0070              __size_of_InitApp 0015  
               __size_of_main 0216                 __size_of_rand 0043  __size_of_ConfigureOscillator 0001  
                    intlevel1 0000              ??_my_isr_routine 0027            __CFG_FOSC$INTOSCIO 0000  
          my_isr_routine@j_47 002C  
